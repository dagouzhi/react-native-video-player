/// <reference types="node" />
import React from 'react';
import { View, Animated } from 'react-native';
declare class VideoPlayer extends React.Component<any, any> {
    static defaultProps: {
        autoPlay: boolean;
        showSmallCont: boolean;
        speedColor: string;
        dotColor: string;
        dotBorderColor: string;
        bottomSpeedColor: string;
        cachColor: string;
        allSpeedColor: string;
    };
    noVipSecond: any;
    url: any;
    spinValue: Animated.Value;
    adminBrightness: string;
    soundData: number;
    soundDataY: number;
    speedData: number;
    speedDataX: number;
    BrightnessData: number;
    BrightnessY: number;
    nowTime: string;
    nowCurrentTime: number;
    defSpeed: number;
    speedTouchScale: number;
    speedFastValue: number;
    speedSlowValue: number;
    dotX: Animated.Value;
    bufferX: Animated.Value;
    soundAnima: Animated.Value;
    playDotX: any;
    playhideContsDotX: any;
    playBufferX: any;
    recordHandeY: any[];
    recordHandeX: any[];
    dotspeed: any;
    ismoveDot: any;
    rightSpeedRef: any;
    isSolTouch: boolean;
    player: any;
    sloSpeedTime: NodeJS.Timeout;
    leftSpeedRef: any;
    hide: Animated.CompositeAnimation;
    AnimatedOp: Animated.CompositeAnimation;
    fastHide: Animated.CompositeAnimation;
    toofastHide: Animated.CompositeAnimation;
    _panResponder: any;
    startX: number;
    startY: number;
    volume: number;
    brightnessData: any;
    brightness: any;
    moveYData: number;
    LockRef: any;
    speedTouch: any;
    moveXData: number;
    hideVolumeTime: any;
    VolumeRef: any;
    hideBrightnessTime: any;
    BrightnessRef: any;
    realMarginLeft: number;
    speedtime: any;
    speedalltime: any;
    SpeedTipTimeRef: any;
    dotspeedWidth: number;
    reasut: any;
    _panSpeeDot: any;
    touchX: number;
    adminPaused: boolean;
    lastBackPressed: boolean;
    onError: boolean;
    videoBox: View;
    constructor(props: any);
    componentWillUnmount(): void;
    _orientationDidChange: (orientation: any) => void;
    changeAllBox: () => void;
    changeSmallBox: () => void;
    setAll: () => void;
    setSmall: () => void;
    componentDidMount(): void;
    animatedonBuffer(event: any): void;
    animatedDot: (e: any) => void;
    speedLongTouch: (evt: any) => void;
    speedLongTouchOut: (evt: any) => void;
    componentWillMount(): void;
    TimeHideConts(TimeHideConts: any): void;
    changeSpeedTip: (e: any) => void;
    fastHideConts: () => void;
    activateAutoHide: () => void;
    rePlay: (autoPlay?: boolean, admRePlay?: boolean) => void;
    setPaused: (e: any) => void;
    reLoad: () => void;
    showLockAndCont: () => void;
    showConts: () => void;
    onLoad: (data: any) => void;
    reVideo: () => void;
    spin: () => void;
    videoError: (e: any) => void;
    changeWindows: (e: any) => void;
    btnPasuedfun: () => void;
    onchangeUrl: () => void;
    render(): JSX.Element;
}
export declare const NgxuSetting: () => void;
export default VideoPlayer;
